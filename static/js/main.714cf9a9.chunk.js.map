{"version":3,"sources":["HomePage.tsx","api.ts","components/PeoplePages/PersonalLink.tsx","components/PeoplePages/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePages/PeoplePage.tsx","components/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonalLink","person","selectedSlug","useParams","name","sex","born","died","mother","father","slug","motherName","fatherName","isWoman","isSelected","motherFragment","undefined","to","fatherFragment","classNames","PeopleTable","people","isLoading","error","length","map","Loader","PeoplePage","useState","setIsLoading","setPeople","setError","useEffect","loadingPeople","dataPeople","peopleWithParents","find","motherPerson","fatherPerson","NotFoundPage","Navbar","role","exact","activeClassName","App","path","component","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.714cf9a9.chunk.js","sourcesContent":["export const HomePage = () => (<h1 className=\"title\">Home Page</h1>);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ninterface PropsPersonalLink {\n  person: Person;\n}\n\nexport const PersonalLink: FC<PropsPersonalLink> = ({ person }) => {\n  const { selectedSlug } = useParams<{ selectedSlug: string }>();\n  const {\n    name, sex, born, died, mother, father, slug, motherName, fatherName,\n  } = person;\n\n  const isWoman = sex === 'f';\n  const isSelected = slug === selectedSlug;\n\n  const motherFragment\n    = mother !== undefined\n      ? (\n        <Link\n          to={mother.slug}\n          className=\"has-text-danger\"\n        >\n          {motherName || '-'}\n        </Link>\n      )\n      : (\n        <p>\n          {' '}\n          {motherName || '-'}\n        </p>\n      );\n\n  const fatherFragment = father !== undefined\n    ? (\n      <Link\n        to={father.slug}\n      >\n        {fatherName || '-'}\n      </Link>\n    )\n    : (\n      <p>\n        {' '}\n        {fatherName || '-'}\n      </p>\n    );\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      // eslint-disable-next-line max-len\n      className={classNames({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <Link\n          to={slug}\n          className={classNames({ 'has-text-danger': isWoman })}\n        >\n          {name}\n\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {motherFragment}\n      </td>\n      <td>\n        {fatherFragment}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\n\nimport { PersonalLink } from './PersonalLink';\nimport { Person } from '../../types';\n\ninterface PropsPeopleTable {\n  people: Person[];\n  isLoading: boolean;\n  error: boolean;\n}\n\nexport const PeopleTable: FC<PropsPeopleTable> = ({\n  people, isLoading, error,\n}) => {\n  return (\n    <>\n\n      {error\n        && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      {people.length < 1 && !isLoading ? (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )\n        : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <PersonalLink\n                  person={person}\n                  key={person.slug}\n                />\n              ))}\n              {/* <tr data-cy=\"person\">\n        <td>\n          <a href=\"#/people/jan-van-brussel-1714\">\n            Jan van Brussel\n          </a>\n        </td>\n\n        <td>m</td>\n        <td>1714</td>\n        <td>1748</td>\n        <td>Joanna van Rooten</td>\n        <td>Jacobus van Brussel</td>\n      </tr>\n\n      <tr data-cy=\"person\">\n        <td>\n          <a href=\"#/people/philibert-haverbeke-1907\">\n            Philibert Haverbeke\n          </a>\n        </td>\n\n        <td>m</td>\n        <td>1907</td>\n        <td>1997</td>\n\n        <td>\n          <a\n            className=\"has-text-danger\"\n            href=\"#/people/emma-de-milliano-1876\"\n          >\n            Emma de Milliano\n          </a>\n        </td>\n\n        <td>\n          <a href=\"#/people/emile-haverbeke-1877\">\n            Emile Haverbeke\n          </a>\n        </td>\n      </tr>\n\n      <tr data-cy=\"person\" className=\"has-background-warning\">\n        <td>\n          <a href=\"#/people/jan-frans-van-brussel-1761\">\n            Jan Frans van Brussel\n          </a>\n        </td>\n\n        <td>m</td>\n        <td>1761</td>\n        <td>1833</td>\n        <td>-</td>\n\n        <td>\n          <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n            Jacobus Bernardus van Brussel\n          </a>\n        </td>\n      </tr>\n\n      <tr data-cy=\"person\">\n        <td>\n          <a\n            className=\"has-text-danger\"\n            href=\"#/people/lievijne-jans-1542\"\n          >\n            Lievijne Jans\n          </a>\n        </td>\n\n        <td>f</td>\n        <td>1542</td>\n        <td>1582</td>\n        <td>-</td>\n        <td>-</td>\n      </tr>\n\n      <tr data-cy=\"person\">\n        <td>\n          <a href=\"#/people/bernardus-de-causmaecker-1721\">\n            Bernardus de Causmaecker\n          </a>\n        </td>\n\n        <td>m</td>\n        <td>1721</td>\n        <td>1789</td>\n\n        <td>\n          <a\n            className=\"has-text-danger\"\n            href=\"#/people/livina-haverbeke-1692\"\n          >\n            Livina Haverbeke\n          </a>\n        </td>\n\n        <td>\n          <a href=\"#/people/lieven-de-causmaecker-1696\">\n            Lieven de Causmaecker\n          </a>\n        </td>\n      </tr> */}\n            </tbody>\n          </table>\n        )}\n\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from './PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadingPeople = async () => {\n      setIsLoading(true);\n      const dataPeople = await getPeople();\n\n      if (!dataPeople) {\n        setError(true);\n      }\n\n      const peopleWithParents = dataPeople.map(person => {\n        const mother = dataPeople.find((motherPerson) => {\n          return motherPerson.name === person.motherName;\n        });\n        const father = dataPeople.find((fatherPerson) => {\n          return fatherPerson.name === person.fatherName;\n        });\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setIsLoading(false);\n      setPeople(peopleWithParents);\n    };\n\n    loadingPeople();\n  }, []);\n\n  return (\n    <>\n\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader />\n            : (\n              <PeopleTable\n                isLoading={isLoading}\n                people={people}\n                error={error}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            exact\n            activeClassName=\"has-background-grey-lighter\"\n            className=\"navbar-item\"\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            exact\n            activeClassName=\"has-background-grey-lighter\"\n            className=\"navbar-item\"\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './HomePage';\nimport { PeoplePage } from './components/PeoplePages/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/home\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route path=\"/people\" component={PeoplePage} />\n          <Route path=\"/:selectedSlug\" component={PeoplePage} />\n          <Route path=\"/*\" component={NotFoundPage} />\n        </Switch>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}